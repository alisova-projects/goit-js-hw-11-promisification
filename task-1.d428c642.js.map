{"version":3,"sources":["js/task-1.js"],"names":["delay","ms","Promise","resolve","reject","setTimeout","logger","time","console","log","then"],"mappings":";;;AAyB0B,aAzB1B,QAAA,qBAWA,IAAMA,EAAQ,SAAAC,GAEL,OAAA,IAAIC,QAAQ,SAACC,EAASC,GAC3BC,WAAW,WACTF,EAAQF,IACPA,MAIDK,EAAS,SAAAC,GAAQC,OAAAA,QAAQC,IAAsBF,kBAAAA,OAAAA,EAAlC,QAGnBP,EAAM,KAAMU,KAAKJ,GACjBN,EAAM,KAAMU,KAAKJ,GACjBN,EAAM,MAAMU,KAAKJ","file":"task-1.d428c642.js","sourceRoot":"..\\src","sourcesContent":["import '../css/common.css';\r\n\r\n/*\r\nЗадание 1\r\n\r\nНапиши функцию delay(ms), которая возвращает промис,\r\nпереходящий в состояние \"resolved\" через ms миллисекунд.\r\nЗначением исполнившегося промиса должно быть то кол-во миллисекунд,\r\nкоторое передали во время вызова функции delay.\r\n*/\r\n\r\nconst delay = ms => {\r\n  // Твой код\r\n  return new Promise((resolve, reject) => {\r\n    setTimeout(() => {\r\n      resolve(ms);\r\n    }, ms);\r\n  })  \r\n};\r\n\r\nconst logger = time => console.log(`Resolved after ${time}ms`);\r\n\r\n// Вызовы функции для проверки\r\ndelay(2000).then(logger); // Resolved after 2000ms\r\ndelay(1000).then(logger); // Resolved after 1000ms\r\ndelay(1500).then(logger); // Resolved after 1500ms"]}